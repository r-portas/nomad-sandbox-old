# A playbook for installing and configuring Nomad

- name: Nomad
  hosts: all
  become: true
  tasks:
    - name: Install cfssl
      dnf:
        name: golang-github-cloudflare-cfssl
        state: present

    - name: Generate CA private key and certificate
      shell:
        cmd: cfssl print-defaults csr | cfssl gencert -initca - | cfssljson -bare nomad-ca
        creates: nomad-ca.pem
        chdir: /data

    - name: Create cfssl.json config
      copy:
        dest: /data/cfssl.json
        content: |
          {
            "signing": {
              "default": {
                "expiry": "87600h",
                "usages": ["signing", "key encipherment", "server auth", "client auth"]
              }
            }
          }

    - name: Generate Nomad certificate
      shell:
        cmd: echo '{}' | cfssl gencert -ca=nomad-ca.pem -ca-key=nomad-ca-key.pem -config=cfssl.json -hostname="server.global.nomad,localhost,127.0.0.1" - | cfssljson -bare server
        creates: server.pem
        chdir: /data

    - name: Generate CLI certificate
      shell:
        cmd: echo '{}' | cfssl gencert -ca=nomad-ca.pem -ca-key=nomad-ca-key.pem -profile=client - | cfssljson -bare cli
        creates: cli.pem
        chdir: /data

    - name: Generate a browser compatible certificate from the CLI certificate
      shell:
        cmd: "openssl pkcs12 -export -inkey ./cli-key.pem -in ./cli.pem -out ./cli.p12 -passout pass:"
        creates: cli.p12
        chdir: /data

    - name: Install Nomad and Docker
      include_tasks: "../common/nomad.yaml"

    - name: Configure Nomad
      blockinfile:
        path: /etc/nomad.d/nomad.hcl
        block: |
          plugin "docker" {
            config {
              allow_privileged = true
              volumes {
                enabled = true
              }
            }
          }

          tls {
            http = true
            rpc = true

            ca_file = "/data/nomad-ca.pem"
            cert_file = "/data/server.pem"
            key_file = "/data/server-key.pem"

            verify_server_hostname = true
            verify_https_client = true
          }

    - name: Restart Nomad
      systemd:
        name: nomad
        state: restarted
